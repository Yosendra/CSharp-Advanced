class Shared
{
    public static int[] Data { get; set; }      // Store data values generated by producer thread
    public static int DataCount { get; set; }          // Total numbers of values generated

    static Shared()
    {
        Data = new int[15];
        DataCount = Data.Length;
    }
}

// Represents the producer thread
class Producer
{
    public void Produce()
    {
        Console.WriteLine($"{Thread.CurrentThread.Name} started");
        
        Console.WriteLine($"{Thread.CurrentThread.Name} completed");
    }
}

// Represents the consumer thread
class Consumer
{
    public void Consume()
    {
        Console.WriteLine($"{Thread.CurrentThread.Name} started");

        Console.WriteLine($"{Thread.CurrentThread.Name} completed");
    }
}

class Program
{
    public static void Main()
    {
        // Create both object of producer and consumer
        Producer producer = new();
        Consumer consumer = new();

        // Create delegate objects of ThreadStart
        ThreadStart threadStart1 = producer.Produce;
        ThreadStart threadStart2 = consumer.Consume;

        // Create thread objects
        Thread producerThread = new(threadStart1)
        {
            Name = "Producer Thread",
        };
        Thread consumerThread = new(threadStart2)
        {
            Name = "Consumer Thread",
        };

        // Start threads
        producerThread.Start();
        consumerThread.Start();

        // Join both threads to main thread
        producerThread.Join();
        consumerThread.Join();

        Console.ReadKey();
    }
}